// Code generated by MockGen. DO NOT EDIT.
// Source: operation_type.go
//
// Generated by this command:
//
//	mockgen -package mocks -destination=./mocks/operation_type_mock.go -source=operation_type.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	model "go-pismo-challenge/pkg/model"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockOperationTypeConnector is a mock of OperationTypeConnector interface.
type MockOperationTypeConnector struct {
	ctrl     *gomock.Controller
	recorder *MockOperationTypeConnectorMockRecorder
	isgomock struct{}
}

// MockOperationTypeConnectorMockRecorder is the mock recorder for MockOperationTypeConnector.
type MockOperationTypeConnectorMockRecorder struct {
	mock *MockOperationTypeConnector
}

// NewMockOperationTypeConnector creates a new mock instance.
func NewMockOperationTypeConnector(ctrl *gomock.Controller) *MockOperationTypeConnector {
	mock := &MockOperationTypeConnector{ctrl: ctrl}
	mock.recorder = &MockOperationTypeConnectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOperationTypeConnector) EXPECT() *MockOperationTypeConnectorMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockOperationTypeConnector) Get(ctx context.Context, id int) (model.OperationType, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, id)
	ret0, _ := ret[0].(model.OperationType)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockOperationTypeConnectorMockRecorder) Get(ctx, id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockOperationTypeConnector)(nil).Get), ctx, id)
}
